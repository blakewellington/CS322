	.text
	.globl _class_A
_class_A:
	.quad _A_go
    # _main ()
    # (a)
	.p2align 4,0x90
	.globl _main
_main:
	pushq %rbx
    # 0.  Begin:
F0_Begin:
    # 1.   t1 = call _malloc(13)
	movq $13,%rdi
	call _malloc
    # 2.   [t1]:P = _class_A
	leaq _class_A(%rip),%r10
	movq %r10,(%rax)
    # 3.   call _init0_A(t1)
	movq %rax,%rdi
	call _init0_A
    # 4.   a = t1
    # 5.   t2 = [a]:P
	movq (%rax),%rbx
    # 6.   t3 = [t2]:P
	movq (%rbx),%rbx
    # 7.   t4 = call * t3(a)
	movq %rax,%rdi
	call * %rbx
    # 8.   call _printInt(t4)
	movq %rax,%rdi
	call _printInt
    # 9.   return 
	popq %rbx
	ret
    # 10. End:
F0_End:
    # _init0_A (obj)
	.p2align 4,0x90
	.globl _init0_A
_init0_A:
	subq $8,%rsp
	movq %rdi,%rax
    # 0.  Begin:
F1_Begin:
    # 1.   8[obj]:B = false
	movb $0,8(%rax)
    # 2.   9[obj]:I = 0
	movl $0,9(%rax)
    # 3.   return 
	addq $8,%rsp
	ret
    # 4.  End:
F1_End:
    # _init_A (obj, b, i)
	.p2align 4,0x90
	.globl _init_A
_init_A:
	pushq %rbx
	movq %rdi,%rbx
	movq %rsi,%rax
	movq %rdx,%rcx
    # 0.  Begin:
F2_Begin:
    # 1.   8[obj]:B = b
	movb %al,8(%rbx)
    # 2.   9[obj]:I = i
	movl %ecx,9(%rbx)
    # 3.   return 
	popq %rbx
	ret
    # 4.  End:
F2_End:
    # _A_go (obj)
    # (a)
	.p2align 4,0x90
	.globl _A_go
_A_go:
	pushq %rbx
	movq %rdi,%rax
    # 0.  Begin:
F3_Begin:
    # 1.   t1 = call _malloc(16)
	movq $16,%rdi
	call _malloc
	movq %rax,%rbx
    # 2.   a = t1
    # 3.   t2 = 1 < 2
	movq $2,%r10
	movq $1,%r11
	cmpq %r10,%r11
	setl %bl
    # 4.   t3 = 3 > 4
	movq $4,%r10
	movq $3,%r11
	cmpq %r10,%r11
	setg %cl
    # 5.   t4 = 7 * 8
	movq $7,%rdx
	imulq $8,%rdx
    # 6.   t5 = 6 + t4
	movq %rdx,%r10
	movq $6,%rdx
	addq %r10,%rdx
    # 7.   t6 = 5 == t5
	movq $5,%r11
	cmpq %rdx,%r11
	sete %dl
    # 8.   t7 = t3 && t6
	andq %rdx,%rcx
    # 9.   t8 = t2 || t7
	orq %rcx,%rbx
    # 10.  t9 = !true
	movq $1,%rcx
	notq %rcx
    # 11.  t10 = t8 || t9
	orq %rcx,%rbx
    # 12.  8[obj]:B = t10
	movb %bl,8(%rax)
    # 13.  t11 = 8 - 7
	movq $8,%rbx
	subq $7,%rbx
    # 14.  t12 = t11 + 6
	addq $6,%rbx
    # 15.  t13 = 5 * 4
	movq $5,%rcx
	imulq $4,%rcx
    # 16.  t14 = t13 / 2
	movq $2,%r10
	movq %rcx,%rax
	cqto
	idivq %r10
	movq %rax,%rcx
    # 17.  t15 = t12 + t14
	addq %rcx,%rbx
    # 18.  9[obj]:I = t15
	movl %ebx,9(%rax)
    # 19.  t16 = 8[obj]:B
	movzbq 8(%rax),%rbx
    # 20.  call _printBool(t16)
	movq %rbx,%rdi
	call _printBool
    # 21.  t17 = 9[obj]:I
	movslq 9(%rax),%rax
    # 22.  return t17
	popq %rbx
	ret
    # 23. End:
F3_End:
